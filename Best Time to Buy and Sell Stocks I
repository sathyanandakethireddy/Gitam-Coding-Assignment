# Say you have an array, A, for which the ith element is the price of a given stock on day i.
# If you were only permitted to complete at most one transaction (i.e, buy one and sell one share of the
# stock), design an algorithm to find the maximum profit.
# Return the maximum possible profit.
# Problem Constraints
# 0 <= len(A) <= 7e5
# 1 <= A[i] <= 1e7
# Input Format
# The first and the only argument is an array of integers, A.
# Output Format
# Return an integer, representing the maximum possible profit.
# Example Input
# Input 1:
# A = [1, 2]
# Input 2:
# A = [1, 4, 5, 2, 4]
# Example Output
# Output 1:
# 1
# Output 2:
# 4
# code:
def maxProfit(A):
    if not A or len(A) < 2:
        return 0

    min_price = A[0]
    max_profit = 0

    for price in A:
        min_price = min(min_price, price)
        max_profit = max(max_profit, price - min_price)

    return max_profit

# Example usage:
try:
    input_array = list(map(int, input("Enter the stock prices separated by space: ").split()))
    result = maxProfit(input_array)
    print(f"The maximum possible profit is: {result}")
except ValueError:
    print("Please enter valid integers separated by space.")
